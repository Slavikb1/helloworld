# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest
  name: default

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  app_version: '1.0.$(Build.BuildId)'
  app_name: 'hello'
  ORG_NAME: 'slavikb1'
  branchName:  $(Build.SourceBranchName) 
  nupkg_path: $(System.DefaultWorkingDirectory)/$(app_name)/bin/Release/$(app_name).$(app_version).nupkg
  dll_path:   $(System.DefaultWorkingDirectory)/$(app_name)/bin/Debug/net8.0/$(app_name).dll

steps:

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'blabla'
    scannerMode: 'MSBuild'
    projectKey: 'hello_hello_f877abcf-e307-4abe-b00a-a0e7d2832b85'

- script: cd ./$(app_name) && dotnet build 
  displayName: 'Build Artifact'

- task: SonarQubeAnalyze@5
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
    
- publish: $(dll_path)
  artifact: hello
  displayName: 'Publish .dll to Pipeline'

- task: artifactstagger@1
  inputs:
    EndpointType: 'integrated'
    StageNameTag: false
    CustomTags: $(branchName)_$(app_version)
  displayName: 'Tag the Build'

- script: cd ./$(app_name) && dotnet pack -p Version=$(app_version) 
  displayName: 'Pack the NuGet_File'

- script: dotnet nuget push --source "https://pkgs.dev.azure.com/slavikb1/_packaging/slavikb1/nuget/v3/index.json" --api-key az /home/slavik/myagent/_work/3/s/hello/bin/Release/hello.$(app_version).nupkg
  displayName: 'Publish NuGet_File Azure Artifacts'

- script: echo "$(branchName)_$(app_version)"
  displayName: 'Display Version Number'
  
